Hii
 
hi
 
Koni vicharal tar sang
 
sure
 
Hii
 
hi
 
Jaa naa
 
Second Month Learning Plan For GTPs (C&I) - Platform Services - Avaloq Confluence
 
GITHUB ACTIONS.txt
 
GitHub Actions.docx
 
21.11.2024

Today's Update-
 
* Tasks completed- 60%

Basic Commands of terminals

Shell scripting 

- Introduction & Basic commands
 
 
 
  name: Java Program Build & Workflow Success/Failure Notification
 
on: push
   
 
jobs:
  java-build:
    runs-on: ubuntu-latest
 
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
 
      # - name: Set up JDK 11
      #   uses: actions/setup-java@v2
      #   with:
      #     java-version: '11'
 
      # - name: Debug file structure (for troubleshooting)
      #   run: |
      #     echo "Printing the file structure..."
      #     pwd  # Print working directory
      #     ls -la  # List files to confirm HelloWorld.java exists
     
      # - name: Compile Java program
      #   run: |
      #     echo "Compiling the Java program..."
      #     javac HelloWorld.java
 
      # - name: Run Java program
      #   run: |
      #     echo "Running the Java program..."
      #     java HelloWorld
 
      - name: java
        run: echo "Hello Rohan..."
 
  # notify:
  #   runs-on: ubuntu-latest
  #   needs: java-build  # This makes sure `notify` runs after `java-build`
   
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2
 
  #     - name: Send Email notification
  #       run: |
  #         STATUS=$(if [[ $? -eq 0 ]]; then echo "success"; else echo "failure"; fi)
  #         SUBJECT="GitHub Workflow $STATUS"
  #         MESSAGE="The workflow has $STATUS. Please check the logs."
         
  #         if [[ "$STATUS" == "success" ]]; then
  #           MESSAGE="The Java program built and ran successfully, and the workflow completed successfully!"
  #         fi
 
  #         curl -s --user "api:${{ secrets.MAILGUN_API_KEY }}" \
  #           https://api.mailgun.net/v3/${{ secrets.MAILGUN_DOMAIN }}/messages \
  #           -F from='noreply@${{ secrets.MAILGUN_DOMAIN }}' \
  #           -F to='madhura.khandare@avaloq.com' \
  #           -F subject="$SUBJECT" \
  #           -F text="$MESSAGE"
 
  notify:
  runs-on: ubuntu-latest
  needs: java-build  # This makes sure `notify` runs after `java-build`
 
  steps:
    - name: Checkout code
      uses: actions/checkout@v2
 
    - name: Send Email notification
      run: |
        STATUS=$(if [[ $? -eq 0 ]]; then echo "success"; else echo "failure"; fi)
        SUBJECT="GitHub Workflow $STATUS"
        MESSAGE="The workflow has $STATUS. Please check the logs."
       
        if [[ "$STATUS" == "success" ]]; then
          MESSAGE="The Java program built and ran successfully, and the workflow completed successfully!"
        fi
 
        # Send email using SMTP (Gmail)
        curl --url "smtp://${{ secrets.SMTP_HOST }}:${{ secrets.SMTP_PORT }}" \
          --ssl-reqd \
          --mail-from "${{ secrets.SMTP_USERNAME }}" \
          --mail-rcpt "${{ secrets.SMTP_TO_EMAIL }}" \
          --upload-file <(echo -e "From: ${SMTP_USERNAME}\nTo: ${SMTP_TO_EMAIL}\nSubject: $SUBJECT\n\n$MESSAGE") \
          --user "${{ secrets.SMTP_USERNAME }}:${{ secrets.SMTP_PASSWORD }}"
 
 
 
SMTP_USERNAME
 
SMTP_PASSWORD
 
SMTP_HOST
 
SMTP_PORT
 
host-  smtp.gmail.com
 
port 587
 
- name: Send Email notification
      run: |
        STATUS=$(if [[ $? -eq 0 ]]; then echo "success"; else echo "failure"; fi)
        SUBJECT="GitHub Workflow $STATUS"
        MESSAGE="The workflow has $STATUS. Please check the logs."
       
        if [[ "$STATUS" == "success" ]]; then
          MESSAGE="The Java program built and ran successfully, and the workflow completed successfully!"
        fi
 
jobs:
  java-build:
    runs-on: ubuntu-latest
 
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
 
      # - name: Set up JDK 11
      #   uses: actions/setup-java@v2
      #   with:
      #     java-version: '11'
 
      # - name: Debug file structure (for troubleshooting)
      #   run: |
      #     echo "Printing the file structure..."
      #     pwd  # Print working directory
      #     ls -la  # List files to confirm HelloWorld.java exists
     
      # - name: Compile Java program
      #   run: |
      #     echo "Compiling the Java program..."
      #     javac HelloWorld.java
 
      # - name: Run Java program
      #   run: |
      #     echo "Running the Java program..."
      #     java HelloWorld
 
      - name: java
        run: echo "Hello Rohan..."
 
 
name: Send Microsoft Teams Notification
 
on:
  push:
    branches:
      - main
      - master
env:
  MS_TEAMS_WEBHOOK_URL: https://avaloqgroup.webhook.office.com/webhookb2/acc69694-4513-4770-9275-42f898a52f96@2ba8a4bf-3d7a-478b-b8d1-85cae49436ef/IncomingWebhook/ee99d20a71df4bb7993376f96e8a7427/9be00cee-8615-47cd-acdb-537181146f7d/V2vqRicQ0PbEBM-ImL6GUIwMByEgr2iZbJBdhuJXvNOV41
 
jobs:
 
  java-build:
    runs-on: ubuntu-latest
 
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
 
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
 
      - name: Debug file structure (for troubleshooting)
        run: |
          echo "Printing the file structure..."
          pwd  # Print working directory
          ls -la  # List files to confirm HelloWorld.java exists
     
      - name: Compile Java program
        run: |
          echo "Compiling the Java program..."
          javac HelloWorld.java
 
      - name: Run Java program
        run: |
          echo "Running the Java program..."
          java HelloWorld
 
      - name: java
        run: echo "Hello ..."
 
  send_notification:
    needs: java-build
    runs-on: ubuntu-latest
    steps:
      - name: Send Teams Notification
        run: |
          curl -X POST -H "Content-Type: application/json" \
            -d '{"text": "repo Link: ${{ github.repository }}"}' \
            $MS_TEAMS_WEBHOOK_URL
 